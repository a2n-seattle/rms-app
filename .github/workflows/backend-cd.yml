# Workflow to push to Amplify on commit
name: Backend CD

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]
    paths: [ 'amplify/**' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency: AmplifyCD

jobs:
  amplify-deploy:
    runs-on: ubuntu-latest
    environment: AmplifyCD

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: configure amplify
        run: |
          npm install -g @aws-amplify/cli@13.0.1
          aws_config_file_path="$(pwd)/aws_config_file_path.json"
          echo '{"accessKeyId":"'$AWS_ACCESS_KEY_ID'","secretAccessKey":"'$AWS_SECRET_ACCESS_KEY'","region":"'$AWS_REGION'"}' > $aws_config_file_path
          echo '{"projectPath": "'"$(pwd)"'","defaultEditor":"code","envName":"'alpha'"}' > ./amplify/.config/local-env-info.json
          echo '{"'alpha'":{"configLevel":"project","useProfile":false,"awsConfigFilePath":"'$aws_config_file_path'"}}' > ./amplify/.config/local-aws-info.json
          amplify env pull --yes
          amplify status
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: install, build and unit test
        run: |
          npm install
          npm run build
          npm run test:unit

      - name: deploy
        run: |
          amplify push --yes

      - name: integration test
        run: |
          npm run test:integ

      - name: Report Status
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}